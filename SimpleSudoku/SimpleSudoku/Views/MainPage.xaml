<Page
    x:Class="SC.SimpleSudoku.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:SC.SimpleSudoku.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <Page.Resources>
        <ResourceDictionary Source="MainPageResources.xaml" />
    </Page.Resources>
    <Page.DataContext>
        <viewModels:MainViewModel />
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding CurrentNavState.IsPuzzleDifficultyVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Margin="5" Text="Puzzle Seed:" />
                <TextBox Text="{Binding EnteredSeed, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource NullableIntConverter}}"
                         PlaceholderText="Random Seed" />
            </StackPanel>
            <Button Content="Easy" FontSize="28" HorizontalAlignment="Center" Margin="0,5,0,0"
                    Command="{Binding ShowPuzzleCommand}" CommandParameter="Easy"/>
            <Button Content="Normal" FontSize="28" HorizontalAlignment="Center" Margin="0,5,0,0"
                    Command="{Binding ShowPuzzleCommand}" CommandParameter="Normal" />
            <Button Content="Hard" FontSize="28" HorizontalAlignment="Center" Margin="0,5,0,0"
                    Command="{Binding ShowPuzzleCommand}" CommandParameter="Hard" />
            <Button Content="Insane" FontSize="28" HorizontalAlignment="Center" Margin="0,5,0,0"
                    Command="{Binding ShowPuzzleCommand}" CommandParameter="Insane" />
        </StackPanel>

        <Grid
            Visibility="{Binding CurrentNavState.IsSolvingVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <CommandBar Name="AppCommandBar" ClosedDisplayMode="Compact" HorizontalContentAlignment="Left">
                <CommandBar.Content>
                    <StackPanel>
                        <AppBarButton Icon="Home" Label="Main Menu" Margin="15,0"
                                      IsCompact="{Binding IsOpen,ElementName=AppCommandBar,Converter={StaticResource InvertBooleanConverter}}" />
                    </StackPanel>
                </CommandBar.Content>
                <CommandBar.PrimaryCommands>
                    <AppBarToggleButton Content="Pencil Mode" IsChecked="{Binding IsInPencilMode}" Width="80" HorizontalContentAlignment="Center"/>
                    <AppBarButton Icon="Help" Label="Hint" />
                    <AppBarButton Icon="View" Label="Reveal" />
                </CommandBar.PrimaryCommands>
            </CommandBar>
            <TextBlock HorizontalAlignment="Left" Margin="50,50,0,0" Grid.Row="1" TextWrapping="Wrap"
                       Text="Elapsed Time: 00:00:00" FontSize="50" VerticalAlignment="Top" />
            <Grid Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="Black" BorderThickness="2">
                <ItemsControl HorizontalAlignment="Center" VerticalAlignment="Center"
                          ItemTemplate="{StaticResource RowTemplate}" ItemsSource="{Binding Cells}" Background="Black" />
                <Grid IsHitTestVisible="False">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Width="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="0" Grid.Column="1" Grid.RowSpan="3" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="0" Grid.Column="1" Grid.RowSpan="3" Width="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" Width="2" HorizontalAlignment="Left" VerticalAlignment="Stretch" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="0" Grid.Column="2" Grid.RowSpan="3" Width="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" IsHitTestVisible="False" Fill="Black"/>

                    <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" IsHitTestVisible="False" Fill="Black"/>
                    <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" IsHitTestVisible="False" Fill="Black"/>
                </Grid>
            </Grid>

            <ContentControl Grid.Row="2" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                            Margin="10,20" ContentTemplate="{StaticResource PuzzleTouchEntryPanel}" />
        </Grid>

        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Visibility="{Binding CurrentNavState.IsMainMenuVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="160" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="1" Text="Main Menu" HorizontalAlignment="Center" Margin="0,30" FontSize="42" />
            <Button Content="{Binding CurrentUser.Username}" Grid.Row="0" Grid.Column="2" Margin="0,10,10,10"
                    FontSize="24"
                    HorizontalAlignment="Right" VerticalAlignment="Center">
                <Button.Flyout>
                    <Flyout Placement="Bottom">
                        <StackPanel MaxWidth="400">
                            <Grid Visibility="{Binding IsSignedIn, Converter={StaticResource InvertBooleanConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition MinWidth="120" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="2,2,10,2"
                                           Text="Username" />
                                <TextBox Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="2"
                                         Text="{Binding EnteredUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <!--<interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior EventName="KeyPressed">
                                            <core:InvokeCommandAction Command="{Binding SignInCommand}"/>
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>-->
                                </TextBox>
                                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="2,2,10,2"
                                           Text="Password" />
                                <PasswordBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="2"
                                             Password="{Binding EnteredPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <!--<interactivity:Interaction.Behaviors>
                                        <core:EventTriggerBehavior>
                                            <core:InvokeCommandAction Command="{Binding SignInCommand}"/>
                                        </core:EventTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>-->
                                </PasswordBox>

                                <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                                            HorizontalAlignment="Right">
                                    <TextBlock Text="{Binding LoginErrorMessage}" TextWrapping="WrapWholeWords"
                                               Foreground="Red" />
                                    <StackPanel Orientation="Horizontal">
                                        <Button Content="Sign In" HorizontalAlignment="Center" Margin="5"
                                                Command="{Binding SignInCommand}" />
                                        <Button Content="Sign Up" HorizontalAlignment="Center" Margin="5"
                                                Command="{Binding SignUpCommand}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                            <Grid Visibility="{Binding IsSignedIn}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Average Score" HorizontalAlignment="Right" Margin="5" />
                                    <TextBlock Text="Average Solving Time" HorizontalAlignment="Right" Margin="5" />
                                    <TextBlock Text="Average Puzzle Difficulty" HorizontalAlignment="Right" Margin="5" />
                                    <TextBlock Text="# Puzzles Solved" HorizontalAlignment="Right" Margin="5" />
                                </StackPanel>
                                <StackPanel Grid.Column="1">
                                    <TextBlock Text="{Binding CurrentUser.AverageScore}" Margin="5" />
                                    <TextBlock Text="{Binding CurrentUser.AverageSolvingTimeString}" Margin="5" />
                                    <TextBlock Text="{Binding CurrentUser.AveragePuzzleDifficulty}" Margin="5" />
                                    <TextBlock Text="{Binding CurrentUser.NumPuzzlesSolved}" Margin="5" />
                                </StackPanel>
                            </Grid>
                            <StackPanel Orientation="Horizontal" Visibility="{Binding IsSignedIn}">
                                <Button Content="Sign Out" Command="{Binding SignOutCommand}" Margin="5" />
                                <Button Content="Change Password" Margin="5">
                                    <Button.Flyout>
                                        <Flyout Placement="Bottom">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>

                                                <TextBlock Grid.Row="0" Grid.Column="0" Text="New Password" Margin="5" />
                                                <PasswordBox Grid.Row="0" Grid.Column="1"
                                                             Password="{Binding ChangePasswordBox, UpdateSourceTrigger=PropertyChanged}"
                                                             MinWidth="150" Margin="5" />

                                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Confirm Password"
                                                           Margin="5" />
                                                <PasswordBox Grid.Row="1" Grid.Column="1"
                                                             Password="{Binding ChangePasswordBox2, UpdateSourceTrigger=PropertyChanged}"
                                                             MinWidth="150" Margin="5" />

                                                <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                                                        Content="Confirm" HorizontalAlignment="Right" Margin="5"
                                                        Command="{Binding ChangePasswordCommand}" />
                                            </Grid>
                                        </Flyout>
                                    </Button.Flyout>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>


            <StackPanel Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Row="1"
                        Grid.ColumnSpan="3">
                <Button Content="Continue Puzzle" HorizontalAlignment="Center" Margin="0,5" FontSize="28" />
                <Button Content="New Puzzle" HorizontalAlignment="Center" Margin="0,5" FontSize="28"
                        Command="{Binding NewPuzzleCommand}" />
                <Button Content="Leaderboard" HorizontalAlignment="Center" Margin="0,5" FontSize="28" />
                <Button Content="Options" HorizontalAlignment="Center" Margin="0,5" FontSize="28"
                        Command="{Binding OptionsCommand}" />
            </StackPanel>
        </Grid>

        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
              Visibility="{Binding CurrentNavState.IsOptionsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition MinWidth="150" />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="1" Text="Options" HorizontalAlignment="Center" Margin="5,30" FontSize="42" />

            <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Center"
                        Grid.ColumnSpan="3">

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10">
                    <TextBlock Text="Mistake Highlighting" FontSize="18" VerticalAlignment="Center" Margin="0,0,20,0" />
                    <ToggleSwitch IsOn="{Binding Options.IsMistakeHighlightingOn, Mode=TwoWay}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10">
                    <TextBlock Text="Leaderboard Visibility" FontSize="18" VerticalAlignment="Center" Margin="0,0,20,0" />
                    <ToggleSwitch IsOn="{Binding Options.IsLeaderboardVisible, Mode=TwoWay}"
                                  IsEnabled="{Binding IsSignedIn}" />
                </StackPanel>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10">
                    <TextBlock Text="Puzzle Timer" FontSize="18" VerticalAlignment="Center" Margin="0,0,20,0" />
                    <ToggleSwitch IsOn="{Binding Options.IsPuzzleTimerVisible, Mode=TwoWay}" />
                </StackPanel>

            </StackPanel>
        </Grid>
    </Grid>
</Page>